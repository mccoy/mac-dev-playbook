---
# mac-dev-playbook config specific to Jim McCoy's laptop

downloads: ~/.ansible-downloads/

configure_system: true
configure_dotfiles: true
configure_terminal: true
configure_osx: true
configure_zsh: true

# Set to 'true' to configure the Dock via dockutil.
configure_dock: true
dockitems_remove: 
# This is the order of items in a 'clean' install
- Launchpad
- Safari
- Messages
- Mail
- Maps
- Photos
- FaceTime
- Calendar
- Contacts
- Reminders
- Notes
- TV
- Music
- Podcasts
- News
- 'App Store'
- 'System Preferences'
dockitems_persist:
- name: "Firefox"
  path: "/Applications/Firefox.app/"
  pos: 1
- name: "iTerm"
  path: "/Applications/iTerm.app/"
  pos: 2
- name: "PyCharm"
  path: "/Applications/PyCharm.app/"
  pos: 3
- name: "Mail"
  path: "/Applications/Mail.app/"
  pos: 4

configure_sudoers: false
sudoers_custom_config: ''
# Example:
# sudoers_custom_config: |
#   # Allow users in admin group to use sudo with no password.
#   %admin ALL=(ALL) NOPASSWD: ALL

dotfiles_repo: git@github.com:mccoy/dotfiles.git
dotfiles_repo_version: main
dotfiles_repo_accept_hostkey: true
dotfiles_repo_local_destination: ~/Documents/src/dotfiles
dotfiles_files:
  - .aliases
  - .bash_profile
  - .bashrc
  - .emacs.d/init.el
  - .gitattributes
  - .gitconfig
  - .gitignore
  - .inputrc
  - .oh-my-zsh/custom
  - .osx
  - .tmux.conf
  - .vimrc
  - .zprofile
  - .zshenv
  - .zshrc

homebrew_upgrade_all_packages: true		# will upgrade on every run
homebrew_installed_packages:
  # - ansible # Installed via Pip.
  - asciinema
  - autoconf
  - awscli
  - azure-cli
  - bash-completion
  - black
  - colima
  - dog
  - doxygen
  - elixir
  - fd
  - gettext
  - gifsicle
  - git
  - git-crypt
  - git-lfs
  - go
  - gnupg
  - gnu-tar		# needed for infra/ansible/roles/node-exporter
  - gron
  - hopenpgp-tools	# for gpg/yubi setup a la DrDuh guide
  - httpie
  - htop
  - iperf
  - jc
  - jless
  - jq
  - komiser
  - kubelogin
  - kubernetes-cli
  - kustomize
  - lazydocker
  - libevent
  - lima
  - mas
  # - mcrypt
  - mosh
  - m1-terraform-provider-helper
  - nmap
  - node
  - nvm
  - openssl
  - postgresql
  - pyenv
  - pyenv-virtualenv
  - pyenv-virtualenvwrapper
  - readline
  - redis
  - ripgrep
  - ripgrep-all
  - rustup-init
  - ssh-copy-id
  - sqlite
  - stern
  - terraform
  - terrascan
  - the_silver_searcher
  - tmux
  - vault
  - visidata
  - watch
  - websocat
  - wget
  - wireguard-tools
  - ykman
  - yq
  - yubikey-personalization	# for gpg/yubi setup a la DrDuh guide
  - zbar
  - zoxide

homebrew_taps:
#  - homebrew/core
#  - homebrew/cask
  - homebrew/cask-fonts
  - buo/cask-upgrade		# 'brew cu -a'
  - Azure/kubelogin		# azure kubelogin
  - komiserio/komiser		# for komiser
  - kreuzwerker/taps		# for m1-terraform-provider-helper
  - saulpw/vd			# for visidata

homebrew_cask_appdir: /Applications
homebrew_cask_accept_external_apps: true	# If false the playbook will fail if cask-avail app is already installed manually
homebrew_cask_apps:
  - 1password
  - alfred
  - amazon-workspaces
  - appcleaner
  - app-tamer
#  - backblaze               # quarantine causes problems, install normally
  - bartender
  - balenaetcher
  - betterdisplay
  - blackhole-2ch            # audio blackhole device to mute individual aps 
  - blockblock
  - bookmacster
  - cakebrew
  - chromedriver
  - cleanmymac
  - dangerzone
  - dash
  - displaylink
  - docker
  - drawio
  - eloston-chromium
  - emacs
  - firefox
  - franz                    # kafka client
  - gpg-suite
  - google-chrome
  - google-drive
  - grandperspective
  - handbrake
  - iterm2
  - karabiner-elements
  - knockknock
  - librewolf
  - licecap
  - lulu
  - malwarebytes	# drops installer into Caskroom/malwarebytes/<ver> but does not install it
  - meld
  - microsoft-excel
  - microsoft-word
  - microsoft-powerpoint
  - mountain-duck
  - mullvadvpn
  - multipass
  - obsidian
  - orbstack
  - orion
  - osquery
  - oversight
  - pgadmin4
  - pritunl
  - pycharm
  - racket
  - raindropio
  - ransomwhere
  - red-canary-mac-monitor
  - reikey
  - santa
  - screens-connect
  - sizeup
  - slack
  - slimbatterymonitor
  - stats
  - superduper
  - tableplus
  - the-clock
  - utm
  - vagrant
#  - virtualbox
  - visual-studio-code
  - vlc
  - xbar
  - yubico-yubikey-manager
  - zoom
  # some quicklook plugins
  - qlcolorcode
  - qlstephen
  - qlmarkdown
  - quicklook-json
  - webpquicklook
  - suspicious-package
  - quicklookase
  - qlvideo
  - qlImageSize
  # fonts
  - font-anonymous-pro
  # - font-inconsolata-g
  - font-inconsolata-nerd-font
  - font-inter
  - font-jetbrains-mono
  - font-jetbrains-mono-nerd-font

# See `geerlingguy.mas` role documentation for usage instructions.
# mas_installed_apps: []
mas_installed_apps:
  - {id: 425424353, name: "The Unarchiver"}
  - {id: 462054704, name: "Microsoft Word"}
  - {id: 462058435, name: "Microsoft Excel"}
  - {id: 462062816, name: "Microsoft PowerPoint"}
  - {id: 1365531024, name: "1Blocker"}
  - {id: 1451685025, name: "Wireguard"}
  - {id: 747648890, name: "Telegram"}
  - {id: 1591303229, name: "Vinegar"}
mas_email: "jim_mccoy@me.com"
mas_password: ""
mas_signin_dialog: true

osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages: []
# - name: drush
#   state: present # present/absent, default: present
#   version: "^8.1" # default: N/A
gem_packages: []
# - name: bundler
#   state: present # present/absent/latest, default: present
#   version: "~> 1.15.1" # default: N/A
npm_packages: []
# - name: webpack
#   state: present # present/absent/latest, default: present
#   version: "^2.6" # default: N/A
pip_packages: []
# - name: mkdocs
#   state: present # present/absent/latest, default: present
#   version: "0.16.3" # default: N/A

# Set to 'true' to configure Visual Studio Code.
configure_vscode: true
vscode_extensions:
  - ms-python.python
  - shd101wyy.markdown-preview-enhanced
  - dbaeumer.vscode-eslint
  - redhat.ansible
  - 4ops.terraform

quarantine_release:
  - ~/Library/QuickLook/QLStephen.qlgenerator
  - /Applications/VSCodium.app
  - /Applications/Emacs.app

# post-install step we need to perform is installing rosetta on M1 silicon
# "/usr/sbin/softwareupdate --install-rosetta --agree-to-license"
#
# also need the dns-heaven fix for go binaries like vault, since they ignore
# the OS DNS mechanism
#
# https://github.com/greenboxal/dns-heaven/
#
# also want to install oh my zsh
# sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#
# additional bitof setup to add:
# - configure screens and display layout
#   - using https://github.com/jakehilborn/displayplacer
# - set up mission control and apps that get locked to specific screens?
#
